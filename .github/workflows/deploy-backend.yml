name: Backend - Production
on:
  push:
    tags:
      - "v*.*.*"
jobs:
  build-backend:
    name: Build Backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    env:
      PROJECT_ID: ${{ secrets.TF_VAR_PROJECT_ID }}
      REPO_NAME: cycling-buddies-api
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.IMAGE_DEPLOY_GOOGLE_CREDENTIALS }}
          project_id: ${{ secrets.TF_VAR_PROJECT_ID }}
          export_default_credentials: true

      - name: Set release version
        run: echo "RELEASE_VERSION=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_ENV

      - name: Build Image
        env:
          IMAGE_TAG: ${{ env.RELEASE_VERSION }}
        run: docker build -t eu.gcr.io/$PROJECT_ID/$REPO_NAME:$IMAGE_TAG .

      - name: GCloud Auth
        run: gcloud auth configure-docker -q

      - name: Push Image
        env:
          IMAGE_TAG: ${{ env.RELEASE_VERSION }}
        run: docker push eu.gcr.io/$PROJECT_ID/$REPO_NAME:$IMAGE_TAG

  build-db-migration:
    name: Build DB Migration
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./flyway
    env:
      PROJECT_ID: ${{ secrets.TF_VAR_PROJECT_ID }}
      REPO_NAME: cycling-buddies-db-migration
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.IMAGE_DEPLOY_GOOGLE_CREDENTIALS }}
          project_id: ${{ secrets.TF_VAR_PROJECT_ID }}
          export_default_credentials: true

      - name: Set release version
        run: echo "RELEASE_VERSION=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_ENV

      - name: Build Image
        env:
          IMAGE_TAG: ${{ env.RELEASE_VERSION }}
        run: docker build -t eu.gcr.io/$PROJECT_ID/$REPO_NAME:$IMAGE_TAG .

      - name: GCloud Auth
        run: gcloud auth configure-docker -q

      - name: Push Image
        env:
          IMAGE_TAG: ${{ env.RELEASE_VERSION }}
        run: docker push eu.gcr.io/$PROJECT_ID/$REPO_NAME:$IMAGE_TAG
