name: Deploy

on:
  push:
    branches:
      - master

jobs:
  deploy-api:
    name: Deploy API
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./new-backend

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: cycling-buddies-api
          IMAGE_TAG: ${{ env.RELEASE_VERSION }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Fill in the new image ID in the Amazon ECS task definition
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ecs/task-definition.json
          container-name: cycling-buddies-api
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: dc-dojo-service-github
          cluster: cycling-buddies-cluster
          wait-for-service-stability: true
  deploy-client:
    name: Deploy Client
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client
    env:
      REACT_APP_AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
      REACT_APP_AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
      REACT_APP_AUTH0_API_AUDIENCE: ${{ secrets.AUTH0_API_AUDIENCE }}
      REACT_APP_API_HOST: ${{ secrets.API_HOST }}
      REACT_APP_GA_TRACKING_ID: ${{ secrets.GA_TRACKING_ID }}
      REACT_APP_RECAPTCHA_SITE_KEY: ${{ secrets.RECAPTCHA_SITE_KEY }}
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Install Dependencies
        run: npm ci
      - name: Build React App
        run: npm run build
      - name: Deploy app build to S3 bucket
        run: aws s3 sync ./build/ s3://cycling-buddy-react-app --delete
